int Solution::maxp3(vector<int> &A) {
    sort(A.begin(),A.end());
    int n = A.size();
    int x=0;
    int y = A[0]*A[1];
    int w = A[n-2]*A[n-3];
    x =  max(w*A[n-1],y*A[n-1]);    
    return x;
}















int Solution::bulbs(vector<int> &A) {
    int c = 0,s=0;
    int n = A.size();
    for(int i=0;i<n;i++){
        if(A[i] == s){
            c++;
            s = 1-s;   
        }        
    }return c;
}



















vector<int> Solution::solve(vector<int> &A, int B) {
    int n=A.size();
    vector<int>m(n+1);
    for(int i=0;i<n;i++){
        m[A[i]] = i;
    }
    for(int i=0;i<n;i++){
        if(!B) return A;
        if(A[i] != n-i){
            m[A[i]] = m[n-i];
            swap(A[i],A[m[n-i]]);
            B--;
        }
    }return A;
}
