#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int getInvCount(int arr[],int n){
    int count=0;
    for(int i=0;i<n-1;i++){
        for(int j=i+1;j<n;j++){
            if(arr[i]>arr[j]) count++;
        }
    }return count;
}
int main(){
    int arr[] = { 1, 20, 6, 4, 5 };
    int n = sizeof(arr)/sizeof(arr[0]);
    cout<<"Number of inversions are "<<getInvCount(arr,n);
    return 0;
} 
















// https://www.geeksforgeeks.org/longest-common-prefix-using-divide-and-conquer-algorithm/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

string commonPrefix(string str1,string str2){
    int s1 = str1.length(),s2 = str2.length();
    string ans="";
    for(int i=0,j=0; i<s1,j<s2;i++,j++){
        if(str1[i] != str2[j]) break;
        ans+=str1[i];
    }return ans;
}
int main(){
    string arr[] = {"geeksforgeeks", "geeks",
                    "geek", "geezer"};
    int n = sizeof (arr) / sizeof (arr[0]); 
    string ans1 = commonPrefix(arr[0],arr[1]); 
    string ans2 = commonPrefix(arr[1],arr[2]); 
    string ans3 = commonPrefix(ans1,ans2); 
    cout << "The longest common prefix is "<< ans3;

    return 0;
} 























// https://www.geeksforgeeks.org/square-root-of-an-integer/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int floorSqt(int x){
    if(x==0 || x==1) return x;
    int i=1,result=1;
    while(result<=x){
        i++;
        result=i*i;
    }return i-1;
}
int main(){
    int n;
    cin>>n;
    cout<<floorSqt(n);
    return 0;
} 

















// https://www.geeksforgeeks.org/median-of-two-sorted-arrays/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int getMedium(int arr1[],int arr2[],int n){
    int ans[2*n];
    int i=0;
    int j=0;
    int k=0;
    while(i<=n && j<=n){
        if(arr1[i]>arr2[j]){
            ans[k++] = arr2[j++];
        }else if(arr1[i]<arr2[j]){
            ans[k++] = arr1[i++];
        }
    }while(i<n){
        ans[k++] = arr1[i++];
    }while(j<n){
        ans[k++] = arr1[j++];
    }  
    return (ans[k/2-1]+ans[k/2])/2;   

}
int main(){
    int arr1[] = {1, 12, 15, 26, 38};
    int arr2[] = {2, 13, 17, 30, 45};
    cout<<getMedium(arr1, arr2,5);

    return 0;
} 













// https://www.geeksforgeeks.org/write-a-c-program-to-calculate-powxn/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int pow(int n,int x){
    if(x==0) return 1; 
    return n*pow(n,x-1);
}
int main(){
    int n,x;
    cin>>n>>x;
    cout<<pow(n,x);

    return 0;
} 
